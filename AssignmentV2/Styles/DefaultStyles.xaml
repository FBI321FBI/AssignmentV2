<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="http://schemas.microsoft.com/xaml/behaviors">

	<Color x:Key="DefaultTextForegroundColor">#788070</Color>
	
	<SolidColorBrush x:Key="DefaultBackGround" Color="#4c5644"/>
	<SolidColorBrush x:Key="DefaultBackGround2" Color="#3d463c"/>
	<SolidColorBrush x:Key="DefaultBorderBrush" Color="#8c9281"/>
	<SolidColorBrush x:Key="DefaultBorderBrush2" Color="#2c2e24"/>
	<SolidColorBrush x:Key="DefaultTextForegroundSelected" Color="#c4b654"/>
	<SolidColorBrush x:Key="DefaultButtonTextForeground" Color="White"/>
	<SolidColorBrush x:Key="DefaultTextForeground" Color="{DynamicResource DefaultTextForegroundColor}"/>
    <SolidColorBrush x:Key="DefaultTextForegroundDisable" Color="#24321c"/>

    <Style x:Key="DefaultButtonStyle" TargetType="Button">
		<Setter Property="Background" Value="{StaticResource DefaultBackGround}"/>
		<Setter Property="Foreground" Value="{StaticResource DefaultButtonTextForeground}"/>
		<Setter Property="BorderBrush" Value="{StaticResource DefaultBorderBrush}"/>
		<Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}">
						<ContentPresenter Content="{TemplateBinding Content}"
										  HorizontalAlignment="Center"
										  VerticalAlignment="Center"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="{StaticResource DefaultTextForegroundColor}" BlurRadius="3" ShadowDepth="3"/>
            </Setter.Value>
        </Setter>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="{StaticResource DefaultBackGround2}"/>
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Foreground" Value="{StaticResource DefaultTextForegroundDisable}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="DefaultBorderStyle" TargetType="Border">
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="White"/>
		<Setter Property="Background" Value="{StaticResource DefaultBackGround}"/>
	</Style>

	<Style x:Key="DefaultTextBoxWithTagStyle" TargetType="TextBox">
		<Setter Property="Tag" Value="-------"/>
		<Setter Property="Padding" Value="5"/>
		<Setter Property="BorderBrush" Value="{StaticResource DefaultBorderBrush}"/>
		<Setter Property="Foreground" Value="{StaticResource DefaultButtonTextForeground}"/>
		<Setter Property="Background" Value="{StaticResource DefaultBackGround2}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TextBox">
					<StackPanel>
						<TextBlock x:Name="tag"
								   Text="{TemplateBinding Tag}"
								   Foreground="{StaticResource DefaultButtonTextForeground}"
								   Margin="0 0 0 5"/>
						<TextBox x:Name="innerTextBox"
                                 Text="{Binding Path=Text, RelativeSource={RelativeSource AncestorType={x:Type TextBox}}, Mode=TwoWay}"
								 Background="{TemplateBinding Background}"
								 Foreground="{TemplateBinding Foreground}"
								 BorderBrush="{TemplateBinding BorderBrush}"
								 TextWrapping="{TemplateBinding TextWrapping}"/>
					</StackPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsKeyboardFocusWithin" Value="True">
							<Setter TargetName="tag" Property="Foreground" Value="{StaticResource DefaultTextForegroundSelected}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="DefaultTextBoxStyle" TargetType="TextBox">
		<Setter Property="Padding" Value="5"/>
		<Setter Property="BorderBrush" Value="{StaticResource DefaultBorderBrush}"/>
		<Setter Property="Foreground" Value="{StaticResource DefaultButtonTextForeground}"/>
		<Setter Property="Background" Value="{StaticResource DefaultBackGround2}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TextBox">
					<TextBox x:Name="innerTextBox"
							 Text="{Binding Path=Text, RelativeSource={RelativeSource AncestorType={x:Type TextBox}}, Mode=TwoWay}"
							 Background="{TemplateBinding Background}"
							 Foreground="{TemplateBinding Foreground}"
							 BorderBrush="{TemplateBinding BorderBrush}"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="DefaultPasswordBoxStyle" TargetType="PasswordBox">
		<Setter Property="Tag" Value="-------"/>
		<Setter Property="Padding" Value="5"/>
		<Setter Property="BorderBrush" Value="{StaticResource DefaultBorderBrush}"/>
		<Setter Property="Foreground" Value="{StaticResource DefaultButtonTextForeground}"/>
		<Setter Property="Background" Value="{StaticResource DefaultBackGround2}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="PasswordBox">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition/>
							<RowDefinition/>
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>

						<TextBlock x:Name="tag"
								   Text="{TemplateBinding Tag}"
								   Foreground="{StaticResource DefaultButtonTextForeground}"
								   Margin="0 0 0 5"
								   Grid.Row="0"/>

                        <PasswordBox x:Name="innerPasswordBox"
									 Background="{TemplateBinding Background}"
									 Foreground="{TemplateBinding Foreground}"
									 BorderBrush="{TemplateBinding BorderBrush}"
									 Height="{TemplateBinding Height}"
									 HorizontalAlignment="Stretch"
									 Grid.Column="0"
									 Grid.Row="1"/>
						<TextBox x:Name="innerTextBox"
								 Style="{StaticResource DefaultTextBoxStyle}"
								 FontSize="{TemplateBinding FontSize}"
								 HorizontalAlignment="Stretch"
								 VerticalAlignment="Stretch"
								 Grid.Column="0"
								 Grid.Row="1"
								 Visibility="Collapsed"/>
						<Button x:Name="lookButton"  
                                Content="👁" 
                                Grid.Column="1" 
                                Grid.Row="1"
                                Style="{StaticResource DefaultButtonStyle}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsKeyboardFocusWithin" Value="True">
							<Setter TargetName="tag" Property="Foreground" Value="{StaticResource DefaultTextForegroundSelected}"/>
						</Trigger>
						<Trigger SourceName="lookButton" Property="IsPressed" Value="true">
							<Setter TargetName="innerTextBox" Property="Text" Value="{Binding ElementName=innerPasswordBox, Path=Password}"/>
							<Setter TargetName="innerPasswordBox" Property="Visibility" Value="Hidden"/>
							<Setter TargetName="innerTextBox" Property="Visibility" Value="Visible"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="Label3D" TargetType="Label">
		<Setter Property="Foreground" Value="{StaticResource DefaultButtonTextForeground}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Label">
					<Canvas>
						<!-- Задний текст для эффекта тени -->
						<ContentPresenter 
						Content="{TemplateBinding Content}"
						Canvas.Left="1.5" 
						Canvas.Top="1.5"
						Opacity="0.5" />
						<!-- Тень -->

						<!-- Передний текст -->
						<ContentPresenter 
						Content="{TemplateBinding Content}" 
						VerticalAlignment="{TemplateBinding VerticalAlignment}" 
						HorizontalAlignment="{TemplateBinding HorizontalAlignment}" />
					</Canvas>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style x:Key="DefaultButtonToolBarStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource DefaultBackGround}"/>
        <Setter Property="Foreground" Value="{StaticResource DefaultButtonTextForeground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource DefaultBorderBrush}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
					<Border Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}">
						<Label Content="{TemplateBinding Content}"
							   HorizontalAlignment="Center"
							   VerticalAlignment="Center"
							   Background="{TemplateBinding Background}"
							   Foreground="{TemplateBinding Foreground}"
							   Padding="{TemplateBinding Padding}"/>
					</Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource DefaultBackGround2}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource DefaultTextForegroundDisable}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

	<Style x:Key="LabelDefaultStyle" TargetType="Label">
		<Setter Property="Content" Value=""/>
		<Setter Property="Background" Value="{StaticResource DefaultBackGround}"/>
		<Setter Property="Foreground" Value="{StaticResource DefaultTextForegroundSelected}"/>
		<Setter Property="BorderBrush" Value="{StaticResource DefaultBorderBrush}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Label">
					<Border Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}">
						<ContentPresenter Content="{TemplateBinding Content}"
							  HorizontalAlignment="Center"
							  VerticalAlignment="Center"
							  Margin="5"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>